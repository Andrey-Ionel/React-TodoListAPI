{"version":3,"sources":["components/AddTodo/AddTodo.js","components/TodoItem/TodoItem.js","components/ListTodos/ListTodos.js","components/Footer/Footer.js","components/ToggleTodos/ToggleTodos.js","App.js","index.js"],"names":["AddTodo","props","sendPostTodoAddRequest","useState","todoName","setTodo","useEffect","inputRef","current","focus","trim","useRef","className","placeholder","onChange","event","target","value","onKeyPress","charCode","id","Date","now","title","completed","name","ref","TodoItem","toggleTodo","removeTodo","updateTodo","sendPutTodoToggleRequest","sendPutTodoEditingRequest","sendDeleteTodoRequest","toggleCompletedTodos","editRef","setValue","editing","setEditing","todoClassCompleted","todoClassEditing","type","checked","preventDefault","onDoubleClick","onClick","classList","contains","onBlur","ListTodos","todos","map","todo","Footer","clearCompletedTodos","uncompletedTodosCount","filter","setFilter","hasCompleted","sendDeleteCompletedTodosRequest","onClickButton","href","e","ToggleTodos","isCompletedAll","sendPatchTodosToggleRequest","setChecked","htmlFor","App","setTodos","error","setError","filteredTodos","sendGetTodosRequest","fetch","then","response","json","newTodos","method","body","JSON","stringify","headers","setTimeout","reduce","count","completedTodosCount","length","message","description","showIcon","promisePutEditingTodo","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.b4fe80d0.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./addTodo.css\";\r\n\r\nexport function AddTodo(props, { sendPostTodoAddRequest }) {\r\n  const [todoName, setTodo] = useState(\"\");\r\n  const onChangeInputVal = (event) => {\r\n    setTodo(event.target.value);\r\n  };\r\n  const onEnterPress = (event) => {\r\n    if (event.charCode === 13 && todoName.trim()) {\r\n      props.onKeyPress({\r\n        id: Date.now(),\r\n        title: todoName,\r\n        completed: false\r\n      });\r\n      setTodo(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (todoName.trim()) {\r\n      sendPostTodoAddRequest(props)\r\n    }\r\n  }, []);\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  return (\r\n    <input\r\n      className=\"new-todo\"\r\n      placeholder=\"What needs to be done?\"\r\n      onChange={onChangeInputVal}\r\n      onKeyPress={onEnterPress}\r\n      name=\"text\"\r\n      value={todoName}\r\n      ref={inputRef}\r\n    />\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\n\nexport function TodoItem({\n  completed,\n  title,\n  id,\n  toggleTodo,\n  removeTodo,\n  updateTodo,\n  sendPutTodoToggleRequest,\n  sendPutTodoEditingRequest,\n  sendDeleteTodoRequest,\n  toggleCompletedTodos\n}) {\n  const editRef = useRef();\n  const [value, setValue] = useState(title);\n  const [editing, setEditing] = useState(false);\n\n  const onChangeCheckBoxVal = (event) => {\n    if (toggleCompletedTodos) {\n      event.preventDefault()\n    }\n    toggleTodo(id, title, event.target.checked);\n  };\n\n  const onChangeEditingValue = (event) => { setValue(event.target.value) }\n\n  const onClickDeleteTodo = (event) => {\n    if (event.target.classList.contains(\"destroy\")) {\n      removeTodo(id)\n    }\n  }\n\n  const todoClassCompleted = completed ? \"completed\" : \"\";\n  const todoClassEditing = editing ? \"editing\" : \"\";\n  useEffect(() => {\n    if (editing) {\n      editRef.current.focus();\n    }\n  }, [editing]);\n\n  useEffect(() => {\n    if (completed !== completed) {\n      sendPutTodoToggleRequest(id, title, completed)\n    }\n  }, [completed]);\n\n  useEffect(() => {\n    if (value !== value) {\n      sendPutTodoEditingRequest(id, title, completed)\n    }\n  }, [value]);\n\n  useEffect(() => {\n    if (id !== id) {\n      sendDeleteTodoRequest(id)\n    }\n  }, [id]);\n\n  return (\n    <li className={`${todoClassCompleted} ${todoClassEditing}`}>\n      <div className=\"view\">\n        <input\n          className=\"toggle\"\n          type=\"checkbox\"\n          checked={completed}\n          onChange={onChangeCheckBoxVal}\n        />\n        <label onDoubleClick={() => setEditing(true)}>{title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={onClickDeleteTodo}\n        ></button>\n      </div>\n      <input\n        ref={editRef}\n        type=\"text\"\n        className=\"edit\"\n        onBlur={() => {\n          setEditing(false);\n          updateTodo(id, value, completed);\n        }}\n        value={value}\n        onChange={onChangeEditingValue}\n      />\n    </li>\n  );\n}\n","import React from \"react\";\r\nimport { TodoItem } from \"../TodoItem/TodoItem\";\r\nimport \"./listTodos.css\";\r\n\r\nexport function ListTodos({ todos, toggleTodo, removeTodo, updateTodo, sendPutTodoToggleRequest, sendPutTodoEditingRequest, sendDeleteTodoRequest, toggleCompletedTodos }) {\r\n  return (\r\n\r\n    <ul className=\"todo-list\">\r\n      {todos.map((todo, id) => (\r\n        <TodoItem\r\n          key={todo.id}\r\n          id={todo.id}\r\n          title={todo.title}\r\n          completed={todo.completed}\r\n          toggleTodo={toggleTodo}\r\n          removeTodo={removeTodo}\r\n          updateTodo={updateTodo}\r\n          sendPutTodoToggleRequest={sendPutTodoToggleRequest}\r\n          sendPutTodoEditingRequest={sendPutTodoEditingRequest}\r\n          sendDeleteTodoRequest={sendDeleteTodoRequest}\r\n          toggleCompletedTodos={toggleCompletedTodos}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\nimport \"./footer.css\";\n\nexport function Footer({\n  clearCompletedTodos,\n  uncompletedTodosCount,\n  filter,\n  setFilter,\n  hasCompleted,\n  sendDeleteCompletedTodosRequest\n}) {\n  const onClickButton = (event) => {\n    if (event.target.classList.contains(\"clear-completed\")) { clearCompletedTodos() }\n  }\n\n  useEffect(() => {\n    if (onClickButton === true) {\n      sendDeleteCompletedTodosRequest();\n    }\n  }, [onClickButton]);\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{uncompletedTodosCount} </strong>\n        items left\n      </span>\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"/\"\n            className={filter === \"all\" ? \"selected\" : \"\"}\n            onClick={(e) => {\n              e.preventDefault();\n              setFilter(\"all\");\n            }}\n          >\n            All\n          </a>\n        </li>\n        <li>\n          <a\n            className={filter === \"active\" ? \"selected\" : \"\"}\n            href=\"/active\"\n            onClick={(e) => {\n              e.preventDefault();\n              setFilter(\"active\");\n            }}\n          >\n            Active\n          </a>\n        </li>\n        <li>\n          <a\n            className={filter === \"completed\" ? \"selected\" : \"\"}\n            href=\"/completed\"\n            onClick={(e) => {\n              e.preventDefault();\n              setFilter(\"completed\");\n            }}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n      {hasCompleted && (\n        <button\n          className=\"clear-completed\"\n          onClick={onClickButton}\n        >\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./toggleTodos.css\";\r\n\r\nexport function ToggleTodos({ toggleCompletedTodos, isCompletedAll, sendPatchTodosToggleRequest, id }) {\r\n  const [checked, setChecked] = useState(isCompletedAll);\r\n  const onChangeCheckBoxAllVal = (event) => {\r\n    setChecked(event.target.checked);\r\n    toggleCompletedTodos(event.target.checked);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (checked !== checked) {\r\n      sendPatchTodosToggleRequest(checked, id);\r\n    }\r\n  }, [checked]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        id=\"toggle-all\"\r\n        className=\"toggle-all\"\r\n        type=\"checkbox\"\r\n        checked={isCompletedAll}\r\n        onChange={onChangeCheckBoxAllVal}\r\n      />\r\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\r\n    </>\r\n  );\r\n}\r\n","import \"./styles.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { AddTodo } from \"./components/AddTodo/AddTodo\";\nimport { ListTodos } from \"./components/ListTodos/ListTodos\";\nimport { Footer } from \"./components/Footer/Footer\";\nimport { ToggleTodos } from \"./components/ToggleTodos/ToggleTodos\";\nimport { Alert } from 'antd';\n\nexport default function App() {\n  const [filter, setFilter] = useState(\"all\");\n  const [todos, setTodos] = useState([]);\n  const [error, setError] = useState(null);\n\n  const filteredTodos = todos.filter((todo) => {\n    if (filter === \"active\") {\n      return !todo.completed;\n    }\n    if (filter === \"completed\") {\n      return todo.completed;\n    }\n    return true;\n  });\n\n  const sendGetTodosRequest = () => {\n    return fetch('http://localhost:3000/todos?_sort=id&_order=DESC')\n      .then(response => response.json())\n      .then(newTodos => setTodos(newTodos),\n        (error) => setError(error));\n  }\n\n  useEffect(() => {\n    sendGetTodosRequest();\n  }, []);\n\n  const sendPostTodoAddRequest = (todo) => {\n    return fetch('http://localhost:3000/todos', {\n      method: 'POST',\n      body: JSON.stringify({\n        id: todo.id,\n        title: todo.title,\n        completed: todo.completed,\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    })\n      .then((response) => response.json());\n  }\n\n  const addNewTodo = (todo) => {\n    const promisePostAddTodo = sendPostTodoAddRequest(todo);\n    promisePostAddTodo.then(() => {\n      if (todo.title.trim()) {\n        sendGetTodosRequest()\n      }\n    })\n  };\n\n  const sendPatchTodosToggleRequest = (completed, id) => {\n    return fetch(`http://localhost:3000/todos/${id}`, {\n      method: 'PATCH',\n      body: JSON.stringify({\n        completed,\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    })\n      .then((response) => response.json());\n  }\n\n  const toggleCompletedTodos = (completed) => {\n    todos.map((todo) => sendPatchTodosToggleRequest(completed, todo.id))\n    setTimeout(sendGetTodosRequest, 500)\n  };\n\n  const sendPutTodoToggleRequest = (id, title, completed) => {\n    return fetch(`http://localhost:3000/todos/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify({\n        id,\n        title,\n        completed,\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    })\n      .then((response) => response.json());\n  }\n\n  const toggleTodo = (id, title, completed) => {\n    const promisePutToggleTodo = sendPutTodoToggleRequest(id, title, completed);\n    promisePutToggleTodo.then(() => sendGetTodosRequest());\n  };\n\n  const sendDeleteTodoRequest = (id) => {\n    return fetch(`http://localhost:3000/todos/${id}`, {\n      method: 'DELETE',\n    })\n  }\n\n  const removeTodo = (id) => {\n    const promiseDeleteTodoList = sendDeleteTodoRequest(id);\n    promiseDeleteTodoList.then(() => sendGetTodosRequest());\n  }\n\n  const sendPutTodoEditingRequest = (id, title, completed) => {\n    return fetch(`http://localhost:3000/todos/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify({\n        id,\n        title,\n        completed,\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    })\n      .then((response) => response.json());\n  }\n\n  const updateTodo = (id, title, completed) => {\n    const promisePutEditingTodo = sendPutTodoEditingRequest(id, title, completed);\n    if (title.trim()) {\n      promisePutEditingTodo.then(() => sendGetTodosRequest());\n    }\n  };\n\n  const uncompletedTodosCount = todos.reduce((count, todo) => {\n    if (!todo.completed) {\n      count++;\n    }\n    return count++;\n  }, 0);\n\n  const completedTodosCount = todos.reduce((count, todo) => {\n    if (todo.completed) count++;\n    return count;\n  }, 0);\n\n  const isCompletedAll = todos.length === completedTodosCount;\n\n  const hasCompleted = completedTodosCount > 0;\n\n  const sendDeleteCompletedTodosRequest = (id) => {\n    return fetch(`http://localhost:3000/todos/${id}`, {\n      method: 'DELETE',\n    })\n  }\n\n  const clearCompletedTodos = () => {\n    todos.filter((todo) => {\n      if (todo.completed) {\n        sendDeleteCompletedTodosRequest(todo.id);\n      }\n    })\n    setTimeout(sendGetTodosRequest, 500);\n  };\n  if (error) {\n    return <Alert\n      message=\"Error\"\n      description=\"Server crashed or internet connection is lost.\"\n      type=\"error\"\n      showIcon\n    />\n  } else {\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <AddTodo onKeyPress={addNewTodo} sendPostTodoAddRequest={sendPostTodoAddRequest} />\n        </header>\n        <section className=\"main\">\n          {todos.length > 0 && (\n            <ToggleTodos\n              toggleCompletedTodos={toggleCompletedTodos}\n              isCompletedAll={isCompletedAll}\n              sendPatchTodosToggleRequest={sendPatchTodosToggleRequest}\n            />\n          )}\n          <ListTodos\n            todos={filteredTodos}\n            toggleTodo={toggleTodo}\n            removeTodo={removeTodo}\n            updateTodo={updateTodo}\n            sendPutTodoToggleRequest={sendPutTodoToggleRequest}\n            sendPutTodoEditingRequest={sendPutTodoEditingRequest}\n            sendDeleteTodoRequest={sendDeleteTodoRequest}\n            toggleCompletedTodos={toggleCompletedTodos}\n\n          />\n        </section>\n        {todos.length > 0 && (\n          <Footer\n            filter={filter}\n            setFilter={setFilter}\n            clearCompletedTodos={clearCompletedTodos}\n            uncompletedTodosCount={uncompletedTodosCount}\n            hasCompleted={hasCompleted}\n            sendDeleteCompletedTodosRequest={sendDeleteCompletedTodosRequest}\n          />\n        )}\n      </section>\n    );\n  }\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'antd/dist/antd.css';\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}